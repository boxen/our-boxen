#!/bin/bash
# Make sure all our local dependencies are available.

OS_TYPE="$(uname -s)"
set -e

# On Linux, 
# install absolutely necessary Boxen dependencies (git and ruby)
if [[ "$OS_TYPE" =~ 'Linux' ]]; then
  PKGS=""
  for PKG in ruby-dev git-core
  do
    PKGS+=$([[ "" == $(dpkg-query -W --showformat='${Status}\n' $PKG 2>&1 |grep "install ok installed") ]] && echo "$PKG " || echo "")
  done
  if [[ "$PKGS" != "" ]]; then
    /usr/bin/sudo -E -p "Need to install absolutely necessary Boxen dependencies ($PKGS), password for sudo: " \
    /usr/bin/apt-get -y update
    # probably don't need the second prompt, but what the hell
    /usr/bin/sudo -E -p "Need to install absolutely necessary Boxen dependencies ($PKGS), password for sudo: " \
    /usr/bin/apt-get -y install $PKGS
  fi
fi

# FIX: only sudo if gem home isn't writable
(/usr/bin/gem list -i bundler -v '~> 1.5.3' > /dev/null) || {
  /usr/bin/sudo -E -p "Need to install Bundler for system ruby, password for sudo: " \
  /usr/bin/gem install bundler -v '~> 1.5.3' --no-rdoc --no-ri
}

# We don't want old config hanging around.

rm -rf .bundle/config
rm -rf .librarian/puppet/config

# Skip a bunch of things if we aren't on OSX
if [[ "$OS_TYPE" =~ 'Darwin' ]]; then
  # Put xcrun shim on PATH if on MoLo
  set +e
  OSX_VERSION_CHECK=`sw_vers | grep ProductVersion | cut -f 2 -d ':'  | egrep '10\.8'`
  if [ $? -eq 0 ]; then
    export PATH=$(pwd)/vendor/shims:$PATH
  fi
  set -e

  CLT_VERSION=`pkgutil --pkg-info=com.apple.pkg.CLTools_Executables | grep version | cut -f 2 -d ' ' | awk ' { print $1; } '`

  # Bundle install unless we're already up to date.
  if [[ $CLT_VERSION =~ ^5\.1\.0\.0\.1\.1396320587 ]]; then
    # Fix for LLVM that ships with Xcode 5.1
    ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future /usr/bin/bundle install --binstubs bin --path .bundle --quiet "$@"
  else
    /usr/bin/bundle install --binstubs bin --path .bundle --quiet "$@"
  fi
else
  if [ -e /usr/bin/bundle ]; then
    /usr/bin/bundle install --binstubs bin --path .bundle --quiet "$@"
  else
    #TODO: make this more flexible. for now, if a user doesn't have bundle on either path then at least an error will be raised
    /usr/local/bin/bundle install --binstubs bin --path .bundle --quiet "$@"
  fi
fi

# Fix the binstubs to use system ruby
if [ -e /usr/bin/sed ]; then
  find bin -not -path 'bin/\.*' -type f -print0 | xargs -0 /usr/bin/sed -i '' 's|/usr/bin/env ruby|/usr/bin/ruby|g'
else
  find bin -not -path 'bin/\.*' -type f -print0 | xargs -0 -I % /bin/sed -i 's|/usr/bin/env ruby|/usr/bin/ruby|g' %
fi
